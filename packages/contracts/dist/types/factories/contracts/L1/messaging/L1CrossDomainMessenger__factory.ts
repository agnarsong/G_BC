/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L1CrossDomainMessenger,
  L1CrossDomainMessengerInterface,
} from "../../../../contracts/L1/messaging/L1CrossDomainMessenger";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "FailedRelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageBlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "RelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "messageNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "allowMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "blockMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "blockedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "libAddressManager",
    outputs: [
      {
        internalType: "contract Lib_AddressManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseByPOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct Lib_BVMCodec.ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Lib_BVMCodec.ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct IL1CrossDomainMessenger.L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "relayedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_queueIndex",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_oldGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_newGasLimit",
        type: "uint32",
      },
    ],
    name: "replayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_gasLimit",
        type: "uint32",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pauseOwner",
        type: "address",
      },
    ],
    name: "setPauseOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "successfulMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xDomainMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260cc80546001600160a01b03191661dead17905534801561002457600080fd5b50600080546001600160a01b031916905561324a806100446000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637738034c116100ad578063c4d66de811610071578063c4d66de81461025c578063c6b94ab01461026f578063cba4c65214610292578063d9ce1901146102a5578063f2fde38b146102b857600080fd5b80637738034c1461020557806381ada46c1461020d5780638456cb59146102205780638da5cb5b14610228578063b1b1b2091461023957600080fd5b8063461a4478116100f4578063461a4478146101c45780635c975abb146101d75780636e296e45146101e25780636f1c8d47146101ea578063715018a6146101fd57600080fd5b80630ecf2eea1461013157806321d800ec14610146578063299ca4781461017e5780633dbb202b146101a95780633f4ba83a146101bc575b600080fd5b61014461013f3660046127ad565b6102cb565b005b6101696101543660046127ad565b60ca6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b600054610191906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b6101446101b736600461291d565b610316565b610144610440565b6101916101d236600461297c565b610452565b60655460ff16610169565b6101916104d9565b6101446101f83660046129cc565b61054e565b6101446106e8565b6101446106fa565b61014461021b3660046127ad565b61075c565b6101446107a4565b6033546001600160a01b0316610191565b6101696102473660046127ad565b60cb6020526000908152604090205460ff1681565b61014461026a366004612a57565b6107ac565b61016961027d3660046127ad565b60c96020526000908152604090205460ff1681565b6101446102a0366004612a57565b610988565b6101446102b3366004612bc5565b6109b2565b6101446102c6366004612a57565b610d8e565b6102d3610e07565b600081815260c96020526040808220805460ff191660011790555182917ff52508d5339edf0d7e5060a416df98db067af561bdc60872d29c0439eaa13a0291a250565b60006103526040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b815250610452565b90506000816001600160a01b031663b8f770056040518163ffffffff1660e01b815260040160206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190612d12565b905060006103de8633878564ffffffffff16610e61565b90506103f183828663ffffffff16610eae565b856001600160a01b03167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a338785886040516104309493929190612d89565b60405180910390a2505050505050565b610448610e07565b610450610f1c565b565b6000805460405163bf40fac160e01b81526001600160a01b039091169063bf40fac190610483908590600401612dd1565b60206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190612de4565b92915050565b60cc546000906001600160a01b031661dead141561053e5760405162461bcd60e51b815260206004820152601f60248201527f78446f6d61696e4d65737361676553656e646572206973206e6f74207365740060448201526064015b60405180910390fd5b5060cc546001600160a01b031690565b600061058a6040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b815250610452565b60405163153f8c5f60e11b8152600481018690529091506000906001600160a01b03831690632a7f18be9060240160606040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190612e01565b9050600061061889898989610e61565b9050600073111100000000000000000000000000000000111130016007602160991b0187846040516020016106509493929190612e65565b604051602081830303815290604052805190602001209050826000015181146106cb5760405162461bcd60e51b815260206004820152602760248201527f50726f7669646564206d65737361676520686173206e6f74206265656e20656e60448201526638bab2bab2b21760c91b6064820152608401610535565b6106dc84838763ffffffff16610eae565b50505050505050505050565b6106f0610e07565b6104506000610f6e565b60cd546001600160a01b031633146107545760405162461bcd60e51b815260206004820181905260248201527f6d73672e73656e6465722073686f756c652062652070617573656f776e65722e6044820152606401610535565b610450610fc0565b610764610e07565b600081815260c96020526040808220805460ff191690555182917f52c8a2680a9f4cc0ad0bf88f32096eadbebf0646ea611d93a0ce6a29a024040591a250565b610754610e07565b600054600160a81b900460ff16158080156107d457506000546001600160a01b90910460ff16105b806107f55750303b1580156107f55750600054600160a01b900460ff166001145b6108585760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610535565b6000805460ff60a01b1916600160a01b1790558015610885576000805460ff60a81b1916600160a81b1790555b6000546001600160a01b0316156108f15760405162461bcd60e51b815260206004820152602a60248201527f4c3143726f7373446f6d61696e4d657373656e67657220616c72656164792069604482015269373a34b0b634bd32b21760b11b6064820152608401610535565b600080546001600160a01b0384166001600160a01b03199182161790915560cc805490911661dead179055610924610ffd565b61092c611026565b610934611058565b61093c61108d565b8015610984576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610990610e07565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60026097541415610a055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610535565b6002609755610a126110bd565b6000610a2086868686610e61565b9050610a2c8183611103565b1515600114610a8d5760405162461bcd60e51b815260206004820152602760248201527f50726f7669646564206d65737361676520636f756c64206e6f742062652076656044820152663934b334b2b21760c91b6064820152608401610535565b8051602080830191909120600081815260cb90925260409091205460ff1615610b0c5760405162461bcd60e51b815260206004820152602b60248201527f50726f7669646564206d6573736167652068617320616c72656164792062656560448201526a37103932b1b2b4bb32b21760a91b6064820152608401610535565b600081815260c9602052604090205460ff1615610b765760405162461bcd60e51b815260206004820152602260248201527f50726f7669646564206d65737361676520686173206265656e20626c6f636b65604482015261321760f11b6064820152608401610535565b610bb06040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b815250610452565b6001600160a01b0316876001600160a01b03161415610c2d5760405162461bcd60e51b815260206004820152603360248201527f43616e6e6f742073656e64204c322d3e4c31206d6573736167657320746f204c604482015272189039bcb9ba32b69031b7b73a3930b1ba399760691b6064820152608401610535565b60cc80546001600160a01b0319166001600160a01b0388811691909117909155604051600091891690610c61908890612e9d565b6000604051808303816000865af19150503d8060008114610c9e576040519150601f19603f3d011682016040523d82523d6000602084013e610ca3565b606091505b505060cc80546001600160a01b03191661dead179055905080151560011415610d0b57600082815260cb6020526040808220805460ff191660011790555183917f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c91a2610d37565b60405182907f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f90600090a25b6000833343604051602001610d4e93929190612eb9565b60408051601f198184030181529181528151602092830120600090815260ca9092529020805460ff19166001908117909155609755505050505050505050565b610d96610e07565b6001600160a01b038116610dfb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610535565b610e0481610f6e565b50565b6033546001600160a01b031633146104505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610535565b606084848484604051602401610e7a9493929190612ef8565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b60405163037f703f60e51b81526001600160a01b03841690636fee07e090610ee5906007602160991b019085908790600401612f35565b600060405180830381600087803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b50505050505050565b610f24611126565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fc86110bd565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f513390565b600054600160a81b900460ff166104505760405162461bcd60e51b815260040161053590612f5c565b600054600160a81b900460ff1661104f5760405162461bcd60e51b815260040161053590612f5c565b61045033610f6e565b600054600160a81b900460ff166110815760405162461bcd60e51b815260040161053590612f5c565b6065805460ff19169055565b600054600160a81b900460ff166110b65760405162461bcd60e51b815260040161053590612f5c565b6001609755565b60655460ff16156104505760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610535565b600061110e8261116f565b801561111f575061111f83836112bc565b9392505050565b60655460ff166104505760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610535565b6000806111a76040518060400160405280601481526020017329ba30ba32a1b7b6b6b4ba36b2b73a21b430b4b760611b815250610452565b602084015160405163011343b360e71b81529192506001600160a01b038316916389a1d980916111d991600401612ffd565b60206040518083038186803b1580156111f157600080fd5b505afa158015611205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112299190613010565b15801561111f575082516020840151604080860151905163b768bb1760e01b81526001600160a01b0385169363b768bb179361126c939192909190600401613032565b60206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f9190613010565b600080836007602160991b016040516020016112d99291906130aa565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b918301919091529150600090819061134d9060340160408051601f198184030181529190526060870151875161144b565b90925090506001821515146113e05760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a401610535565b60006113eb82611474565b90506114408460405160200161140391815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151611538565b979650505050505050565b60006060600061145a8661155c565b905061146781868661158e565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906114a183611669565b905060405180608001604052806114d1836000815181106114c4576114c46130e1565b602002602001015161169c565b81526020016114ec836001815181106114c4576114c46130e1565b815260200161151483600281518110611507576115076130e1565b60200260200101516116a3565b815260200161152f83600381518110611507576115076130e1565b90529392505050565b6000806115448661155c565b9050611552818686866117a5565b9695505050505050565b6060818051906020012060405160200161157891815260200190565b6040516020818303038152906040529050919050565b60006060600061159d856117db565b905060008060006115af848a896118d5565b815192955090935091501580806115c35750815b61160f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610535565b60008161162b5760405180602001604052806000815250611657565b6116578661163a60018861310d565b8151811061164a5761164a6130e1565b6020026020010151611cf9565b919b919a509098505050505050505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906104d390611d23565b60006104d3825b60006021826000015111156116fa5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610535565b600080600061170885611f0f565b91945092509050600081600181111561172357611723613124565b146117705760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610535565b6000838660200151611782919061313a565b805190915060208410156115525760208490036101000a90049695505050505050565b60008060006117b587868661158e565b915091508180156114405750805160208083019190912087519188019190912014611440565b606060006117e883611669565b9050600081516001600160401b03811115611805576118056127db565b60405190808252806020026020018201604052801561184a57816020015b60408051808201909152606080825260208201528152602001906001900390816118235790505b50905060005b82518110156118cd57600061187d848381518110611870576118706130e1565b6020026020010151612259565b9050604051806040016040528082815260200161189983611669565b8152508383815181106118ae576118ae6130e1565b60200260200101819052505080806118c590613152565b915050611850565b509392505050565b600060608180806118e5876122e9565b9050600086905060008061190c604051806040016040528060608152602001606081525090565b60005b8c51811015611cd1578c818151811061192a5761192a6130e1565b602002602001015191508284611940919061313a565b935061194d60018861313a565b9650836119a5578151805160209091012085146119a05760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b6044820152606401610535565b611a62565b815151602011611a07578151805160209091012085146119a05760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610535565b84611a158360000151612423565b14611a625760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610535565b611a6e6010600161313a565b8260200151511415611ae7578551841415611a8857611cd1565b6000868581518110611a9c57611a9c6130e1565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611ac757611ac76130e1565b60200260200101519050611ada8161244b565b9650600194505050611cbf565b60028260200151511415611c77576000611b0083612481565b9050600081600081518110611b1757611b176130e1565b016020015160f81c90506000611b2e600283613183565b611b399060026131a5565b90506000611b4a848360ff166124a5565b90506000611b588b8a6124a5565b90506000611b6683836124db565b905060ff851660021480611b7d575060ff85166003145b15611bb757808351148015611b925750808251145b15611ba457611ba1818b61313a565b99505b50600160ff1b9950611cd1945050505050565b60ff85161580611bca575060ff85166001145b15611c205782518114611bea5750600160ff1b9950611cd1945050505050565b611c118860200151600181518110611c0457611c046130e1565b602002602001015161244b565b9a509750611cbf945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b6064820152608401610535565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610535565b80611cc981613152565b91505061190f565b50600160ff1b841486611ce487866124a5565b909e909d50909b509950505050505050505050565b602081015180516060916104d391611d139060019061310d565b81518110611870576118706130e1565b6060600080611d3184611f0f565b91935090915060019050816001811115611d4d57611d4d613124565b14611d9a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610535565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611db35790505090506000835b8651811015611f045760208210611e4c5760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b6064820152608401610535565b600080611e896040518060400160405280858c60000151611e6d919061310d565b8152602001858c60200151611e82919061313a565b9052611f0f565b509150915060405180604001604052808383611ea5919061313a565b8152602001848b60200151611eba919061313a565b815250858581518110611ecf57611ecf6130e1565b6020908102919091010152611ee560018561313a565b9350611ef1818361313a565b611efb908461313a565b92505050611de0565b508152949350505050565b600080600080846000015111611f675760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610535565b6020840151805160001a607f8111611f8c576000600160009450945094505050612252565b60b78111612008576000611fa160808361310d565b905080876000015111611ff65760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610535565b60019550935060009250612252915050565b60bf81116120f757600061201d60b78361310d565b9050808760000151116120725760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610535565b600183015160208290036101000a900461208c818361313a565b8851116120db5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610535565b6120e682600161313a565b965094506000935061225292505050565b60f7811161217257600061210c60c08361310d565b9050808760000151116121615760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610535565b600195509350849250612252915050565b600061217f60f78361310d565b9050808760000151116121d45760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610535565b600183015160208290036101000a90046121ee818361313a565b8851116122365760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b6044820152606401610535565b61224182600161313a565b965094506001935061225292505050565b9193909250565b6060600080600061226985611f0f565b91945092509050600081600181111561228457612284613124565b146122d15760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610535565b6122e085602001518484612557565b95945050505050565b60606000825160026122fb91906131c8565b6001600160401b03811115612312576123126127db565b6040519080825280601f01601f19166020018201604052801561233c576020820181803683370190505b50905060005b835181101561241c57600484828151811061235f5761235f6130e1565b01602001516001600160f81b031916901c8261237c8360026131c8565b8151811061238c5761238c6130e1565b60200101906001600160f81b031916908160001a90535060108482815181106123b7576123b76130e1565b01602001516123c9919060f81c613183565b60f81b826123d88360026131c8565b6123e390600161313a565b815181106123f3576123f36130e1565b60200101906001600160f81b031916908160001a9053508061241481613152565b915050612342565b5092915050565b600060208251101561243757506020015190565b818060200190518101906104d391906131e7565b6000606060208360000151101561246c5761246583612635565b9050612478565b61247583612259565b90505b61111f81612423565b60606104d36124a08360200151600081518110611870576118706130e1565b6122e9565b6060825182106124c457506040805160208101909152600081526104d3565b61111f83838486516124d6919061310d565b612640565b6000805b8084511180156124ef5750808351115b80156125405750828181518110612508576125086130e1565b602001015160f81c60f81b6001600160f81b03191684828151811061252f5761252f6130e1565b01602001516001600160f81b031916145b1561111f578061254f81613152565b9150506124df565b60606000826001600160401b03811115612573576125736127db565b6040519080825280601f01601f19166020018201604052801561259d576020820181803683370190505b5090508051600014156125b157905061111f565b60006125bd858761313a565b90506020820160005b6125d1602087613200565b81101561260857825182526125e760208461313a565b92506125f460208361313a565b91508061260081613152565b9150506125c6565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b60606104d382612797565b60608161264e81601f61313a565b101561268d5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610535565b82612698838261313a565b10156126d75760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610535565b6126e1828461313a565b845110156127255760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610535565b606082158015612744576040519150600082526020820160405261278e565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561277d578051835260209283019201612765565b5050858452601f01601f1916604052505b50949350505050565b60606104d3826020015160008460000151612557565b6000602082840312156127bf57600080fd5b5035919050565b6001600160a01b0381168114610e0457600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715612813576128136127db565b60405290565b604080519081016001600160401b0381118282101715612813576128136127db565b60405160a081016001600160401b0381118282101715612813576128136127db565b604051601f8201601f191681016001600160401b0381118282101715612885576128856127db565b604052919050565b60006001600160401b038311156128a6576128a66127db565b6128b9601f8401601f191660200161285d565b90508281528383830111156128cd57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126128f557600080fd5b61111f8383356020850161288d565b803563ffffffff8116811461291857600080fd5b919050565b60008060006060848603121561293257600080fd5b833561293d816127c6565b925060208401356001600160401b0381111561295857600080fd5b612964868287016128e4565b92505061297360408501612904565b90509250925092565b60006020828403121561298e57600080fd5b81356001600160401b038111156129a457600080fd5b8201601f810184136129b557600080fd5b6129c48482356020840161288d565b949350505050565b60008060008060008060c087890312156129e557600080fd5b86356129f0816127c6565b95506020870135612a00816127c6565b945060408701356001600160401b03811115612a1b57600080fd5b612a2789828a016128e4565b94505060608701359250612a3d60808801612904565b9150612a4b60a08801612904565b90509295509295509295565b600060208284031215612a6957600080fd5b813561111f816127c6565b600060c08284031215612a8657600080fd5b612a8e6127f1565b90508135815260208201356020820152604082013560408201526060820135606082015260808201356001600160401b0380821115612acc57600080fd5b612ad8858386016128e4565b608084015260a0840135915080821115612af157600080fd5b50612afe848285016128e4565b60a08301525092915050565b600060408284031215612b1c57600080fd5b612b24612819565b9050813581526020808301356001600160401b0380821115612b4557600080fd5b818501915085601f830112612b5957600080fd5b813581811115612b6b57612b6b6127db565b8060051b9150612b7c84830161285d565b8181529183018401918481019088841115612b9657600080fd5b938501935b83851015612bb457843582529385019390850190612b9b565b808688015250505050505092915050565b600080600080600060a08688031215612bdd57600080fd5b8535612be8816127c6565b94506020860135612bf8816127c6565b935060408601356001600160401b0380821115612c1457600080fd5b612c2089838a016128e4565b9450606088013593506080880135915080821115612c3d57600080fd5b9087019060a0828a031215612c5157600080fd5b612c5961283b565b82358152602083013582811115612c6f57600080fd5b612c7b8b828601612a74565b602083015250604083013582811115612c9357600080fd5b612c9f8b828601612b0a565b604083015250606083013582811115612cb757600080fd5b612cc38b8286016128e4565b606083015250608083013582811115612cdb57600080fd5b612ce78b8286016128e4565b6080830152508093505050509295509295909350565b805164ffffffffff8116811461291857600080fd5b600060208284031215612d2457600080fd5b61111f82612cfd565b60005b83811015612d48578181015183820152602001612d30565b83811115612d57576000848401525b50505050565b60008151808452612d75816020860160208601612d2d565b601f01601f19169290920160200192915050565b6001600160a01b0385168152608060208201819052600090612dad90830186612d5d565b905064ffffffffff8416604083015263ffffffff8316606083015295945050505050565b60208152600061111f6020830184612d5d565b600060208284031215612df657600080fd5b815161111f816127c6565b600060608284031215612e1357600080fd5b604051606081018181106001600160401b0382111715612e3557612e356127db565b60405282518152612e4860208401612cfd565b6020820152612e5960408401612cfd565b60408201529392505050565b6001600160a01b0385811682528416602082015263ffffffff8316604082015260806060820181905260009061155290830184612d5d565b60008251612eaf818460208701612d2d565b9190910192915050565b60008451612ecb818460208901612d2d565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b6001600160a01b03858116825284166020820152608060408201819052600090612f2490830185612d5d565b905082606083015295945050505050565b60018060a01b03841681528260208201526060604082015260006122e06060830184612d5d565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805182526020810151602083015260408101516040830152606081015160608301526000608082015160c06080850152612fe460c0850182612d5d565b905060a083015184820360a08601526122e08282612d5d565b60208152600061111f6020830184612fa7565b60006020828403121561302257600080fd5b8151801515811461111f57600080fd5b8381526000602060608184015261304c6060840186612fa7565b83810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b8084101561309c578451825293850193600193909301929085019061307c565b509998505050505050505050565b600083516130bc818460208801612d2d565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561311f5761311f6130f7565b500390565b634e487b7160e01b600052602160045260246000fd5b6000821982111561314d5761314d6130f7565b500190565b6000600019821415613166576131666130f7565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806131965761319661316d565b8060ff84160691505092915050565b600060ff821660ff8416808210156131bf576131bf6130f7565b90039392505050565b60008160001904831182151516156131e2576131e26130f7565b500290565b6000602082840312156131f957600080fd5b5051919050565b60008261320f5761320f61316d565b50049056fea2646970667358221220d67e2684096562cbf020a2f2197b92ec6ba3ae77108821480783785e4748f6bd64736f6c63430008090033";

type L1CrossDomainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1CrossDomainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1CrossDomainMessenger__factory extends ContractFactory {
  constructor(...args: L1CrossDomainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1CrossDomainMessenger> {
    return super.deploy(overrides || {}) as Promise<L1CrossDomainMessenger>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1CrossDomainMessenger {
    return super.attach(address) as L1CrossDomainMessenger;
  }
  override connect(signer: Signer): L1CrossDomainMessenger__factory {
    return super.connect(signer) as L1CrossDomainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1CrossDomainMessengerInterface {
    return new utils.Interface(_abi) as L1CrossDomainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1CrossDomainMessenger {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1CrossDomainMessenger;
  }
}

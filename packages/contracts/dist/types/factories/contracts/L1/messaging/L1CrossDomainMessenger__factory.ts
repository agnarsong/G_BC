/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L1CrossDomainMessenger,
  L1CrossDomainMessengerInterface,
} from "../../../../contracts/L1/messaging/L1CrossDomainMessenger";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "FailedRelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageBlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "RelayedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "messageNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "SentMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "allowMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_xDomainCalldataHash",
        type: "bytes32",
      },
    ],
    name: "blockMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "blockedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "libAddressManager",
    outputs: [
      {
        internalType: "contract Lib_AddressManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct Lib_BVMCodec.ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Lib_BVMCodec.ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct IL1CrossDomainMessenger.L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "relayedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_queueIndex",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_oldGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_newGasLimit",
        type: "uint32",
      },
    ],
    name: "replayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "_gasLimit",
        type: "uint32",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "successfulMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xDomainMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260cc80546001600160a01b03191661dead17905534801561002457600080fd5b50600080546001600160a01b03191690556130f4806100446000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b1b1b20911610071578063b1b1b20914610208578063c4d66de81461022b578063c6b94ab01461023e578063d9ce190114610261578063f2fde38b1461027457600080fd5b8063715018a6146101d457806381ada46c146101dc5780638456cb59146101ef5780638da5cb5b146101f757600080fd5b8063461a4478116100de578063461a44781461019b5780635c975abb146101ae5780636e296e45146101b95780636f1c8d47146101c157600080fd5b80630ecf2eea1461011057806321d800ec14610125578063299ca4781461015d5780633dbb202b14610188575b600080fd5b61012361011e366004612657565b610287565b005b610148610133366004612657565b60ca6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b600054610170906001600160a01b031681565b6040516001600160a01b039091168152602001610154565b6101236101963660046127c7565b6102d2565b6101706101a9366004612826565b6103fc565b60655460ff16610148565b610170610483565b6101236101cf366004612876565b6104f8565b610123610692565b6101236101ea366004612657565b6106a6565b6101236106ee565b6033546001600160a01b0316610170565b610148610216366004612657565b60cb6020526000908152604090205460ff1681565b610123610239366004612901565b6106fe565b61014861024c366004612657565b60c96020526000908152604090205460ff1681565b61012361026f366004612a6f565b6108da565b610123610282366004612901565b610cb6565b61028f610d2f565b600081815260c96020526040808220805460ff191660011790555182917ff52508d5339edf0d7e5060a416df98db067af561bdc60872d29c0439eaa13a0291a250565b600061030e6040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b8152506103fc565b90506000816001600160a01b031663b8f770056040518163ffffffff1660e01b815260040160206040518083038186803b15801561034b57600080fd5b505afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190612bbc565b9050600061039a8633878564ffffffffff16610d89565b90506103ad83828663ffffffff16610dd6565b856001600160a01b03167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a338785886040516103ec9493929190612c33565b60405180910390a2505050505050565b6000805460405163bf40fac160e01b81526001600160a01b039091169063bf40fac19061042d908590600401612c7b565b60206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d9190612c8e565b92915050565b60cc546000906001600160a01b031661dead14156104e85760405162461bcd60e51b815260206004820152601f60248201527f78446f6d61696e4d65737361676553656e646572206973206e6f74207365740060448201526064015b60405180910390fd5b5060cc546001600160a01b031690565b60006105346040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b8152506103fc565b60405163153f8c5f60e11b8152600481018690529091506000906001600160a01b03831690632a7f18be9060240160606040518083038186803b15801561057a57600080fd5b505afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190612cab565b905060006105c289898989610d89565b9050600073111100000000000000000000000000000000111130016007602160991b0187846040516020016105fa9493929190612d0f565b604051602081830303815290604052805190602001209050826000015181146106755760405162461bcd60e51b815260206004820152602760248201527f50726f7669646564206d65737361676520686173206e6f74206265656e20656e60448201526638bab2bab2b21760c91b60648201526084016104df565b61068684838763ffffffff16610dd6565b50505050505050505050565b61069a610d2f565b6106a46000610e44565b565b6106ae610d2f565b600081815260c96020526040808220805460ff191690555182917f52c8a2680a9f4cc0ad0bf88f32096eadbebf0646ea611d93a0ce6a29a024040591a250565b6106f6610d2f565b6106a4610e96565b600054600160a81b900460ff161580801561072657506000546001600160a01b90910460ff16105b806107475750303b1580156107475750600054600160a01b900460ff166001145b6107aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104df565b6000805460ff60a01b1916600160a01b17905580156107d7576000805460ff60a81b1916600160a81b1790555b6000546001600160a01b0316156108435760405162461bcd60e51b815260206004820152602a60248201527f4c3143726f7373446f6d61696e4d657373656e67657220616c72656164792069604482015269373a34b0b634bd32b21760b11b60648201526084016104df565b600080546001600160a01b0384166001600160a01b03199182161790915560cc805490911661dead179055610876610ef0565b61087e610f19565b610886610f4b565b61088e610f80565b80156108d6576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6002609754141561092d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104df565b600260975561093a610fb0565b600061094886868686610d89565b90506109548183610ff6565b15156001146109b55760405162461bcd60e51b815260206004820152602760248201527f50726f7669646564206d65737361676520636f756c64206e6f742062652076656044820152663934b334b2b21760c91b60648201526084016104df565b8051602080830191909120600081815260cb90925260409091205460ff1615610a345760405162461bcd60e51b815260206004820152602b60248201527f50726f7669646564206d6573736167652068617320616c72656164792062656560448201526a37103932b1b2b4bb32b21760a91b60648201526084016104df565b600081815260c9602052604090205460ff1615610a9e5760405162461bcd60e51b815260206004820152602260248201527f50726f7669646564206d65737361676520686173206265656e20626c6f636b65604482015261321760f11b60648201526084016104df565b610ad86040518060400160405280601981526020017821b0b737b734b1b0b62a3930b739b0b1ba34b7b721b430b4b760391b8152506103fc565b6001600160a01b0316876001600160a01b03161415610b555760405162461bcd60e51b815260206004820152603360248201527f43616e6e6f742073656e64204c322d3e4c31206d6573736167657320746f204c604482015272189039bcb9ba32b69031b7b73a3930b1ba399760691b60648201526084016104df565b60cc80546001600160a01b0319166001600160a01b0388811691909117909155604051600091891690610b89908890612d47565b6000604051808303816000865af19150503d8060008114610bc6576040519150601f19603f3d011682016040523d82523d6000602084013e610bcb565b606091505b505060cc80546001600160a01b03191661dead179055905080151560011415610c3357600082815260cb6020526040808220805460ff191660011790555183917f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c91a2610c5f565b60405182907f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f90600090a25b6000833343604051602001610c7693929190612d63565b60408051601f198184030181529181528151602092830120600090815260ca9092529020805460ff19166001908117909155609755505050505050505050565b610cbe610d2f565b6001600160a01b038116610d235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104df565b610d2c81610e44565b50565b6033546001600160a01b031633146106a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104df565b606084848484604051602401610da29493929190612da2565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b60405163037f703f60e51b81526001600160a01b03841690636fee07e090610e0d906007602160991b019085908790600401612ddf565b600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b50505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e9e610fb0565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ed33390565b6040516001600160a01b03909116815260200160405180910390a1565b600054600160a81b900460ff166106a45760405162461bcd60e51b81526004016104df90612e06565b600054600160a81b900460ff16610f425760405162461bcd60e51b81526004016104df90612e06565b6106a433610e44565b600054600160a81b900460ff16610f745760405162461bcd60e51b81526004016104df90612e06565b6065805460ff19169055565b600054600160a81b900460ff16610fa95760405162461bcd60e51b81526004016104df90612e06565b6001609755565b60655460ff16156106a45760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104df565b600061100182611019565b801561101257506110128383611166565b9392505050565b6000806110516040518060400160405280601481526020017329ba30ba32a1b7b6b6b4ba36b2b73a21b430b4b760611b8152506103fc565b602084015160405163011343b360e71b81529192506001600160a01b038316916389a1d9809161108391600401612ea7565b60206040518083038186803b15801561109b57600080fd5b505afa1580156110af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d39190612eba565b158015611012575082516020840151604080860151905163b768bb1760e01b81526001600160a01b0385169363b768bb1793611116939192909190600401612edc565b60206040518083038186803b15801561112e57600080fd5b505afa158015611142573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110129190612eba565b600080836007602160991b01604051602001611183929190612f54565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b91830191909152915060009081906111f79060340160408051601f19818403018152919052606087015187516112f5565b909250905060018215151461128a5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104df565b60006112958261131e565b90506112ea846040516020016112ad91815260200190565b60408051601f1981840301815290829052600160f81b602083015290602101604051602081830303815290604052886080015184604001516113e2565b979650505050505050565b60006060600061130486611406565b9050611311818686611438565b9250925050935093915050565b60408051608081018252600080825260208201819052918101829052606081018290529061134b83611513565b9050604051806080016040528061137b8360008151811061136e5761136e612f8b565b6020026020010151611546565b81526020016113968360018151811061136e5761136e612f8b565b81526020016113be836002815181106113b1576113b1612f8b565b602002602001015161154d565b81526020016113d9836003815181106113b1576113b1612f8b565b90529392505050565b6000806113ee86611406565b90506113fc8186868661164f565b9695505050505050565b6060818051906020012060405160200161142291815260200190565b6040516020818303038152906040529050919050565b60006060600061144785611685565b90506000806000611459848a8961177f565b8151929550909350915015808061146d5750815b6114b95760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104df565b6000816114d55760405180602001604052806000815250611501565b611501866114e4600188612fb7565b815181106114f4576114f4612f8b565b6020026020010151611ba3565b919b919a509098505050505050505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061047d90611bcd565b600061047d825b60006021826000015111156115a45760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104df565b60008060006115b285611db9565b9194509250905060008160018111156115cd576115cd612fce565b1461161a5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104df565b600083866020015161162c9190612fe4565b805190915060208410156113fc5760208490036101000a90049695505050505050565b600080600061165f878686611438565b915091508180156112ea57508051602080830191909120875191880191909120146112ea565b6060600061169283611513565b9050600081516001600160401b038111156116af576116af612685565b6040519080825280602002602001820160405280156116f457816020015b60408051808201909152606080825260208201528152602001906001900390816116cd5790505b50905060005b825181101561177757600061172784838151811061171a5761171a612f8b565b6020026020010151612103565b9050604051806040016040528082815260200161174383611513565b81525083838151811061175857611758612f8b565b602002602001018190525050808061176f90612ffc565b9150506116fa565b509392505050565b6000606081808061178f87612193565b905060008690506000806117b6604051806040016040528060608152602001606081525090565b60005b8c51811015611b7b578c81815181106117d4576117d4612f8b565b6020026020010151915082846117ea9190612fe4565b93506117f7600188612fe4565b96508361184f5781518051602090910120851461184a5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104df565b61190c565b8151516020116118b15781518051602090910120851461184a5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104df565b846118bf83600001516122cd565b1461190c5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104df565b61191860106001612fe4565b826020015151141561199157855184141561193257611b7b565b600086858151811061194657611946612f8b565b602001015160f81c60f81b60f81c9050600083602001518260ff168151811061197157611971612f8b565b60200260200101519050611984816122f5565b9650600194505050611b69565b60028260200151511415611b215760006119aa8361232b565b90506000816000815181106119c1576119c1612f8b565b016020015160f81c905060006119d860028361302d565b6119e390600261304f565b905060006119f4848360ff1661234f565b90506000611a028b8a61234f565b90506000611a108383612385565b905060ff851660021480611a27575060ff85166003145b15611a6157808351148015611a3c5750808251145b15611a4e57611a4b818b612fe4565b99505b50600160ff1b9950611b7b945050505050565b60ff85161580611a74575060ff85166001145b15611aca5782518114611a945750600160ff1b9950611b7b945050505050565b611abb8860200151600181518110611aae57611aae612f8b565b60200260200101516122f5565b9a509750611b69945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104df565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104df565b80611b7381612ffc565b9150506117b9565b50600160ff1b841486611b8e878661234f565b909e909d50909b509950505050505050505050565b6020810151805160609161047d91611bbd90600190612fb7565b8151811061171a5761171a612f8b565b6060600080611bdb84611db9565b91935090915060019050816001811115611bf757611bf7612fce565b14611c445760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104df565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611c5d5790505090506000835b8651811015611dae5760208210611cf65760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104df565b600080611d336040518060400160405280858c60000151611d179190612fb7565b8152602001858c60200151611d2c9190612fe4565b9052611db9565b509150915060405180604001604052808383611d4f9190612fe4565b8152602001848b60200151611d649190612fe4565b815250858581518110611d7957611d79612f8b565b6020908102919091010152611d8f600185612fe4565b9350611d9b8183612fe4565b611da59084612fe4565b92505050611c8a565b508152949350505050565b600080600080846000015111611e115760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104df565b6020840151805160001a607f8111611e365760006001600094509450945050506120fc565b60b78111611eb2576000611e4b608083612fb7565b905080876000015111611ea05760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104df565b600195509350600092506120fc915050565b60bf8111611fa1576000611ec760b783612fb7565b905080876000015111611f1c5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104df565b600183015160208290036101000a9004611f368183612fe4565b885111611f855760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104df565b611f90826001612fe4565b96509450600093506120fc92505050565b60f7811161201c576000611fb660c083612fb7565b90508087600001511161200b5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104df565b6001955093508492506120fc915050565b600061202960f783612fb7565b90508087600001511161207e5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104df565b600183015160208290036101000a90046120988183612fe4565b8851116120e05760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104df565b6120eb826001612fe4565b96509450600193506120fc92505050565b9193909250565b6060600080600061211385611db9565b91945092509050600081600181111561212e5761212e612fce565b1461217b5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104df565b61218a85602001518484612401565b95945050505050565b60606000825160026121a59190613072565b6001600160401b038111156121bc576121bc612685565b6040519080825280601f01601f1916602001820160405280156121e6576020820181803683370190505b50905060005b83518110156122c657600484828151811061220957612209612f8b565b01602001516001600160f81b031916901c82612226836002613072565b8151811061223657612236612f8b565b60200101906001600160f81b031916908160001a905350601084828151811061226157612261612f8b565b0160200151612273919060f81c61302d565b60f81b82612282836002613072565b61228d906001612fe4565b8151811061229d5761229d612f8b565b60200101906001600160f81b031916908160001a905350806122be81612ffc565b9150506121ec565b5092915050565b60006020825110156122e157506020015190565b8180602001905181019061047d9190613091565b600060606020836000015110156123165761230f836124df565b9050612322565b61231f83612103565b90505b611012816122cd565b606061047d61234a836020015160008151811061171a5761171a612f8b565b612193565b60608251821061236e575060408051602081019091526000815261047d565b61101283838486516123809190612fb7565b6124ea565b6000805b8084511180156123995750808351115b80156123ea57508281815181106123b2576123b2612f8b565b602001015160f81c60f81b6001600160f81b0319168482815181106123d9576123d9612f8b565b01602001516001600160f81b031916145b1561101257806123f981612ffc565b915050612389565b60606000826001600160401b0381111561241d5761241d612685565b6040519080825280601f01601f191660200182016040528015612447576020820181803683370190505b50905080516000141561245b579050611012565b60006124678587612fe4565b90506020820160005b61247b6020876130aa565b8110156124b25782518252612491602084612fe4565b925061249e602083612fe4565b9150806124aa81612ffc565b915050612470565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b606061047d82612641565b6060816124f881601f612fe4565b10156125375760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104df565b826125428382612fe4565b10156125815760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104df565b61258b8284612fe4565b845110156125cf5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104df565b6060821580156125ee5760405191506000825260208201604052612638565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561262757805183526020928301920161260f565b5050858452601f01601f1916604052505b50949350505050565b606061047d826020015160008460000151612401565b60006020828403121561266957600080fd5b5035919050565b6001600160a01b0381168114610d2c57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b03811182821017156126bd576126bd612685565b60405290565b604080519081016001600160401b03811182821017156126bd576126bd612685565b60405160a081016001600160401b03811182821017156126bd576126bd612685565b604051601f8201601f191681016001600160401b038111828210171561272f5761272f612685565b604052919050565b60006001600160401b0383111561275057612750612685565b612763601f8401601f1916602001612707565b905082815283838301111561277757600080fd5b828260208301376000602084830101529392505050565b600082601f83011261279f57600080fd5b61101283833560208501612737565b803563ffffffff811681146127c257600080fd5b919050565b6000806000606084860312156127dc57600080fd5b83356127e781612670565b925060208401356001600160401b0381111561280257600080fd5b61280e8682870161278e565b92505061281d604085016127ae565b90509250925092565b60006020828403121561283857600080fd5b81356001600160401b0381111561284e57600080fd5b8201601f8101841361285f57600080fd5b61286e84823560208401612737565b949350505050565b60008060008060008060c0878903121561288f57600080fd5b863561289a81612670565b955060208701356128aa81612670565b945060408701356001600160401b038111156128c557600080fd5b6128d189828a0161278e565b945050606087013592506128e7608088016127ae565b91506128f560a088016127ae565b90509295509295509295565b60006020828403121561291357600080fd5b813561101281612670565b600060c0828403121561293057600080fd5b61293861269b565b90508135815260208201356020820152604082013560408201526060820135606082015260808201356001600160401b038082111561297657600080fd5b6129828583860161278e565b608084015260a084013591508082111561299b57600080fd5b506129a88482850161278e565b60a08301525092915050565b6000604082840312156129c657600080fd5b6129ce6126c3565b9050813581526020808301356001600160401b03808211156129ef57600080fd5b818501915085601f830112612a0357600080fd5b813581811115612a1557612a15612685565b8060051b9150612a26848301612707565b8181529183018401918481019088841115612a4057600080fd5b938501935b83851015612a5e57843582529385019390850190612a45565b808688015250505050505092915050565b600080600080600060a08688031215612a8757600080fd5b8535612a9281612670565b94506020860135612aa281612670565b935060408601356001600160401b0380821115612abe57600080fd5b612aca89838a0161278e565b9450606088013593506080880135915080821115612ae757600080fd5b9087019060a0828a031215612afb57600080fd5b612b036126e5565b82358152602083013582811115612b1957600080fd5b612b258b82860161291e565b602083015250604083013582811115612b3d57600080fd5b612b498b8286016129b4565b604083015250606083013582811115612b6157600080fd5b612b6d8b82860161278e565b606083015250608083013582811115612b8557600080fd5b612b918b82860161278e565b6080830152508093505050509295509295909350565b805164ffffffffff811681146127c257600080fd5b600060208284031215612bce57600080fd5b61101282612ba7565b60005b83811015612bf2578181015183820152602001612bda565b83811115612c01576000848401525b50505050565b60008151808452612c1f816020860160208601612bd7565b601f01601f19169290920160200192915050565b6001600160a01b0385168152608060208201819052600090612c5790830186612c07565b905064ffffffffff8416604083015263ffffffff8316606083015295945050505050565b6020815260006110126020830184612c07565b600060208284031215612ca057600080fd5b815161101281612670565b600060608284031215612cbd57600080fd5b604051606081018181106001600160401b0382111715612cdf57612cdf612685565b60405282518152612cf260208401612ba7565b6020820152612d0360408401612ba7565b60408201529392505050565b6001600160a01b0385811682528416602082015263ffffffff831660408201526080606082018190526000906113fc90830184612c07565b60008251612d59818460208701612bd7565b9190910192915050565b60008451612d75818460208901612bd7565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b6001600160a01b03858116825284166020820152608060408201819052600090612dce90830185612c07565b905082606083015295945050505050565b60018060a01b038416815282602082015260606040820152600061218a6060830184612c07565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805182526020810151602083015260408101516040830152606081015160608301526000608082015160c06080850152612e8e60c0850182612c07565b905060a083015184820360a086015261218a8282612c07565b6020815260006110126020830184612e51565b600060208284031215612ecc57600080fd5b8151801515811461101257600080fd5b83815260006020606081840152612ef66060840186612e51565b83810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612f465784518252938501936001939093019290850190612f26565b509998505050505050505050565b60008351612f66818460208801612bd7565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015612fc957612fc9612fa1565b500390565b634e487b7160e01b600052602160045260246000fd5b60008219821115612ff757612ff7612fa1565b500190565b600060001982141561301057613010612fa1565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff83168061304057613040613017565b8060ff84160691505092915050565b600060ff821660ff84168082101561306957613069612fa1565b90039392505050565b600081600019048311821515161561308c5761308c612fa1565b500290565b6000602082840312156130a357600080fd5b5051919050565b6000826130b9576130b9613017565b50049056fea26469706673582212205ab307398996982677be8b436002a95e34caf90a3cbd938a6017605e2a29053864736f6c63430008090033";

type L1CrossDomainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1CrossDomainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1CrossDomainMessenger__factory extends ContractFactory {
  constructor(...args: L1CrossDomainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1CrossDomainMessenger> {
    return super.deploy(overrides || {}) as Promise<L1CrossDomainMessenger>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1CrossDomainMessenger {
    return super.attach(address) as L1CrossDomainMessenger;
  }
  override connect(signer: Signer): L1CrossDomainMessenger__factory {
    return super.connect(signer) as L1CrossDomainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1CrossDomainMessengerInterface {
    return new utils.Interface(_abi) as L1CrossDomainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1CrossDomainMessenger {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1CrossDomainMessenger;
  }
}

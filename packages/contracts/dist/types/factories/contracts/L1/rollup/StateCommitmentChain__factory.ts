/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StateCommitmentChain,
  StateCommitmentChainInterface,
} from "../../../../contracts/L1/rollup/StateCommitmentChain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fraudProofWindow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sequencerPublishWindow",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_tssMembers",
        type: "address[]",
      },
    ],
    name: "DistributeTssReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
    ],
    name: "RollBackL2Chain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_batchRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_batchSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_prevTotalElements",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "StateBatchAppended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_batchRoot",
        type: "bytes32",
      },
    ],
    name: "StateBatchDeleted",
    type: "event",
  },
  {
    inputs: [],
    name: "FRAUD_PROOF_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEQUENCER_PUBLISH_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_batch",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_shouldStartAtElement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "appendStateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batches",
    outputs: [
      {
        internalType: "contract IChainStorageContainer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
    ],
    name: "deleteStateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastSequencerTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastSequencerTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalBatches",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalElements",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalElements",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
    ],
    name: "insideFraudProofWindow",
    outputs: [
      {
        internalType: "bool",
        name: "_inside",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "libAddressManager",
    outputs: [
      {
        internalType: "contract Lib_AddressManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shouldRollBack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shouldStartAtElement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "rollBackL2Chain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fraudProofWindow",
        type: "uint256",
      },
    ],
    name: "setFraudProofWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_element",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "siblings",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "verifyStateCommitment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200272938038062002729833981016040819052620000349162000090565b600080546001600160a01b039586166001600160a01b0319918216179091556001805494909516931692909217909255600291909155600355620000d8565b80516001600160a01b03811681146200008b57600080fd5b919050565b60008060008060808587031215620000a757600080fd5b620000b28562000073565b9350620000c26020860162000073565b6040860151606090960151949790965092505050565b61264180620000e86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637ad168a011610097578063b768bb1711610066578063b768bb17146101e8578063c17b291b146101fb578063cfdf677e14610204578063e561dddc1461020c57600080fd5b80637ad168a0146101a157806381eb62ef146101a957806389a1d980146101b2578063ab59f7b8146101d557600080fd5b80633cb747bf116100d35780633cb747bf14610152578063461a4478146101655780635b4d90e2146101785780637aa63a861461018b57600080fd5b80630bf3b5f2146100fa5780632169f79f1461010f578063299ca47814610122575b600080fd5b61010d610108366004611dde565b610214565b005b61010d61011d366004611ebd565b610313565b600054610135906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610135906001600160a01b031681565b610135610173366004611f20565b6105f2565b61010d610186366004612008565b610679565b6101936107df565b604051908152602001610149565b6101936107f8565b61019360035481565b6101c56101c0366004612008565b610811565b6040519015158152602001610149565b61010d6101e336600461203d565b6108a1565b6101c56101f6366004612056565b610967565b61019360025481565b610135610a01565b610193610a29565b61021c6107df565b82146102435760405162461bcd60e51b815260040161023a90612113565b60405180910390fd5b61026f6040518060400160405280600b81526020016a2137b73226b0b730b3b2b960a91b8152506105f2565b604051630156a69560e11b81523360048201526001600160a01b0391909116906302ad4d2a9060240160206040518083038186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190612170565b6103045760405162461bcd60e51b815260040161023a90612192565b61030e8382610aa3565b505050565b61031b6107df565b82146103395760405162461bcd60e51b815260040161023a90612113565b6103656040518060400160405280600b81526020016a2137b73226b0b730b3b2b960a91b8152506105f2565b604051630156a69560e11b81523360048201526001600160a01b0391909116906302ad4d2a9060240160206040518083038186803b1580156103a657600080fd5b505afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190612170565b6103fa5760405162461bcd60e51b815260040161023a90612192565b60008351116104575760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f74207375626d697420616e20656d7074792073746174652062617460448201526231b41760e91b606482015260840161023a565b6104956040518060400160405280601981526020017f43616e6f6e6963616c5472616e73616374696f6e436861696e000000000000008152506105f2565b6001600160a01b0316637aa63a866040518163ffffffff1660e01b815260040160206040518083038186803b1580156104cd57600080fd5b505afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050591906121e1565b835161050f6107df565b6105199190612210565b111561059f5760405162461bcd60e51b815260206004820152604960248201527f4e756d626572206f6620737461746520726f6f74732063616e6e6f742065786360448201527f65656420746865206e756d626572206f662063616e6f6e6963616c207472616e60648201526839b0b1ba34b7b7399760b91b608482015260a40161023a565b6105aa838383610c5b565b6105e8838242336040516020016105d49291909182526001600160a01b0316602082015260400190565b604051602081830303815290604052610d80565b61030e8383610fb9565b6000805460405163bf40fac160e01b81526001600160a01b039091169063bf40fac190610623908590600401612275565b60206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610673919061229d565b92915050565b6106ab60405180604001604052806011815260200170212b26afa33930bab22b32b934b334b2b960791b8152506105f2565b6001600160a01b0316336001600160a01b0316146107315760405162461bcd60e51b815260206004820152603b60248201527f537461746520626174636865732063616e206f6e6c792062652064656c65746560448201527f64206279207468652042564d5f467261756456657269666965722e0000000000606482015260840161023a565b61073a8161116a565b6107565760405162461bcd60e51b815260040161023a906122ba565b61075f81610811565b6107d3576040805162461bcd60e51b81526020600482015260248101919091527f537461746520626174636865732063616e206f6e6c792062652064656c65746560448201527f642077697468696e207468652066726175642070726f6f662077696e646f772e606482015260840161023a565b6107dc81611206565b50565b6000806107ea6113b2565b5064ffffffffff1692915050565b6000806108036113b2565b64ffffffffff169392505050565b6000808260a0015180602001905181019061082c91906122e9565b5090508061088a5760405162461bcd60e51b815260206004820152602560248201527f4261746368206865616465722074696d657374616d702063616e6e6f74206265604482015264207a65726f60d81b606482015260840161023a565b42600254826108999190612210565b119392505050565b6108cd6040518060400160405280600b81526020016a2137b73226b0b730b3b2b960a91b8152506105f2565b604051630156a69560e11b81523360048201526001600160a01b0391909116906302ad4d2a9060240160206040518083038186803b15801561090e57600080fd5b505afa158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190612170565b6109625760405162461bcd60e51b815260040161023a90612192565b600255565b60006109728361116a565b61098e5760405162461bcd60e51b815260040161023a906122ba565b6109ab836020015185846000015185602001518760400151611449565b6109f75760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420696e636c7573696f6e2070726f6f662e0000000000000000604482015260640161023a565b5060019392505050565b6000610a246040518060600160405280602181526020016125eb602191396105f2565b905090565b6000610a33610a01565b6001600160a01b0316631f7b6d326040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2491906121e1565b610adb60405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b8152506105f2565b6001600160a01b0316633231a7f083604051602001610afc91815260200190565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610b30929190612319565b602060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190612170565b610bc85760405162461bcd60e51b81526020600482015260176024820152761d995c9a599e481cda59db985d1d5c994819985a5b1959604a1b604482015260640161023a565b600082604051602401610bdd91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f523f40d60e01b1790529050610c2b73deaddeaddeaddeaddeaddeaddeaddeaddead2222621e84808361168e565b60405183907f8ef5d07412def056f6bfc680f359c8a0370cfacb2becaf67d01e2e372e08964a90600090a2505050565b610c9360405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b8152506105f2565b6001600160a01b0316633231a7f08484604051602001610cb4929190612332565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610ce8929190612319565b602060405180830381600087803b158015610d0257600080fd5b505af1158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190612170565b61030e5760405162461bcd60e51b81526020600482015260176024820152761d995c9a599e481cda59db985d1d5c994819985a5b1959604a1b604482015260640161023a565b6000610daf6040518060400160405280600c81526020016b212b26afa83937b837b9b2b960a11b8152506105f2565b9050600080610dbc6113b2565b9092509050336001600160a01b0384161415610dd9575042610e6e565b426003548264ffffffffff16610def9190612210565b10610e6e5760405162461bcd60e51b815260206004820152604360248201527f43616e6e6f74207075626c69736820737461746520726f6f747320776974686960448201527f6e207468652073657175656e636572207075626c69636174696f6e2077696e6460648201526237bb9760e91b608482015260a40161023a565b60006040518060c00160405280610e83610a29565b8152602001610e91896116f9565b8152602001885181526020018464ffffffffff16815260200187815260200186815250905080600001517f9cf3ad24eae3fd6d461e2f566b35b95b6d671871d9fcb45f8ac8030e4a8d21b382602001518360400151846060015185608001518660a00151604051610f0695949392919061237a565b60405180910390a2610f16610a01565b6001600160a01b0316632015276c610f2d83611bd4565b610f5284604001518560600151610f449190612210565b602887811b91909117901b90565b6040516001600160e01b031960e085901b168152600481019290925264ffffffffff19166024820152604401600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b5050505050505050505050565b6000610ff360405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b8152506105f2565b6001600160a01b0316632cd00d536040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561102d57600080fd5b505af1158015611041573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261106991908101906123bd565b905060008151116110bc5760405162461bcd60e51b815260206004820152601860248201527f67657420747373206d656d6265727320696e206572726f720000000000000000604482015260640161023a565b8251604051600091630fae75d960e01b916110df9186914290879060240161249b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506111286020602160991b01621e84808361168e565b42837ff533ef50019763ee9d95ad46e28350b533c11edd472ae7be93e8fae83c1b6d9986518560405161115c9291906124ca565b60405180910390a350505050565b6000611174610a01565b8251604051634a83e9cd60e11b81526001600160a01b039290921691639507d39a916111a69160040190815260200190565b60206040518083038186803b1580156111be57600080fd5b505afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f691906121e1565b6111ff83611bd4565b1492915050565b61120e610a01565b6001600160a01b0316631f7b6d326040518163ffffffff1660e01b815260040160206040518083038186803b15801561124657600080fd5b505afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e91906121e1565b8151106112c45760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103130ba31b41034b73232bc1760611b604482015260640161023a565b6112cd8161116a565b6112e95760405162461bcd60e51b815260040161023a906122ba565b6112f1610a01565b815160608301516001600160a01b03929092169163167fd681919060281b6040516001600160e01b031960e085901b168152600481019290925264ffffffffff19166024820152604401600060405180830381600087803b15801561135557600080fd5b505af1158015611369573d6000803e3d6000fd5b5050505080600001517f8747b69ce8fdb31c3b9b0a67bd8049ad8c1a69ea417b69b12174068abd9cbd6482602001516040516113a791815260200190565b60405180910390a250565b60008060006113bf610a01565b6001600160a01b031663ccf8f9696040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f757600080fd5b505afa15801561140b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142f91906124e3565b64ffffffffff602882901c169460509190911c9350915050565b60008082116114c05760405162461bcd60e51b815260206004820152603760248201527f4c69625f4d65726b6c65547265653a20546f74616c206c6561766573206d757360448201527f742062652067726561746572207468616e207a65726f2e000000000000000000606482015260840161023a565b81841061151b5760405162461bcd60e51b8152602060048201526024808201527f4c69625f4d65726b6c65547265653a20496e646578206f7574206f6620626f756044820152633732399760e11b606482015260840161023a565b61152482611c1d565b8351146115af5760405162461bcd60e51b815260206004820152604d60248201527f4c69625f4d65726b6c65547265653a20546f74616c207369626c696e6773206460448201527f6f6573206e6f7420636f72726563746c7920636f72726573706f6e6420746f2060648201526c3a37ba30b6103632b0bb32b99760991b608482015260a40161023a565b8460005b845181101561168157856001166001141561161a578481815181106115da576115da61250b565b6020026020010151826040516020016115fd929190918252602082015260400190565b604051602081830303815290604052805190602001209150611668565b8185828151811061162d5761162d61250b565b602002602001015160405160200161164f929190918252602082015260400190565b6040516020818303038152906040528051906020012091505b60019590951c948061167981612521565b9150506115b3565b5090951495945050505050565b600154604051633dbb202b60e01b81526001600160a01b0390911690633dbb202b906116c29086908590879060040161253c565b600060405180830381600087803b1580156116dc57600080fd5b505af11580156116f0573d6000803e3d6000fd5b50505050505050565b6000808251116117685760405162461bcd60e51b815260206004820152603460248201527f4c69625f4d65726b6c65547265653a204d7573742070726f76696465206174206044820152733632b0b9ba1037b732903632b0b3103430b9b41760611b606482015260840161023a565b81516001141561179457816000815181106117855761178561250b565b60200260200101519050919050565b60408051610200810182527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56381527f633dc4d7da7256660a892f8f1604a44b5432649cc8ec5cb3ced4c4e6ac94dd1d60208201527f890740a8eb06ce9be422cb8da5cdafc2b58c0a5e24036c578de2a433c828ff7d818301527f3b8ec09e026fdc305365dfc94e189a81b38c7597b3d941c279f042e8206e0bd86060808301919091527fecd50eee38e386bd62be9bedb990706951b65fe053bd9d8a521af753d139e2da60808301527fdefff6d330bb5403f63b14f33b578274160de3a50df4efecf0e0db73bcdd3da560a08301527f617bdd11f7c0a11f49db22f629387a12da7596f9d1704d7465177c63d88ec7d760c08301527f292c23a9aa1d8bea7e2435e555a4a60e379a5a35f3f452bae60121073fb6eead60e08301527fe1cea92ed99acdcb045a6726b2f87107e8a61620a232cf4d7d5b5766b3952e106101008301527f7ad66c0a68c72cb89e4fb4303841966e4062a76ab97451e3b9fb526a5ceb7f826101208301527fe026cc5a4aed3c22a58cbd3d2ac754c9352c5436f638042dca99034e836365166101408301527f3d04cffd8b46a874edf5cfae63077de85f849a660426697b06a829c70dd1409c6101608301527fad676aa337a485e4728a0b240d92b3ef7b3c372d06d189322bfd5f61f1e7203e6101808301527fa2fca4a49658f9fab7aa63289c91b7c7b6c832a6d0e69334ff5b0a3483d09dab6101a08301527f4ebfd9cd7bca2505f7bef59cc1c12ecc708fff26ae4af19abe852afe9e20c8626101c08301527f2def10d13dd169f550f578bda343d9717a138562e0093b380a1120789d53cf106101e083015282518381529081018352909160009190602082018180368337505085519192506000918291508180805b6001841115611baa57611a4560028561258c565b9150611a526002856125a0565b600114905060005b82811015611afe578a611a6e8260026125b4565b81518110611a7e57611a7e61250b565b602002602001015196508a816002611a9691906125b4565b611aa1906001612210565b81518110611ab157611ab161250b565b6020026020010151955086602089015285604089015287805190602001208b8281518110611ae157611ae161250b565b602090810291909101015280611af681612521565b915050611a5a565b508015611b7a5789611b116001866125d3565b81518110611b2157611b2161250b565b60200260200101519550878360108110611b3d57611b3d61250b565b602002015160001b945085602088015284604088015286805190602001208a8381518110611b6d57611b6d61250b565b6020026020010181815250505b80611b86576000611b89565b60015b611b969060ff1683612210565b935082611ba281612521565b935050611a31565b89600081518110611bbd57611bbd61250b565b602002602001015198505050505050505050919050565b6020808201516040808401516060850151608086015160a08701519351600096611c009695910161237a565b604051602081830303815290604052805190602001209050919050565b6000808211611c875760405162461bcd60e51b815260206004820152603060248201527f4c69625f4d65726b6c65547265653a2043616e6e6f7420636f6d70757465206360448201526f32b4b6143637b3af99149037b310181760811b606482015260840161023a565b8160011415611c9857506000919050565b81600060805b60018110611cd65780611cb4600180831b6125d3565b901b831615611cce57611cc78183612210565b92811c9291505b60011c611c9e565b506001811b8414611cef57611cec600182612210565b90505b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611d2f57611d2f611cf6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d5e57611d5e611cf6565b604052919050565b600067ffffffffffffffff831115611d8057611d80611cf6565b611d93601f8401601f1916602001611d35565b9050828152838383011115611da757600080fd5b828260208301376000602084830101529392505050565b600082601f830112611dcf57600080fd5b611cef83833560208501611d66565b600080600060608486031215611df357600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611e1857600080fd5b611e2486828701611dbe565b9150509250925092565b600067ffffffffffffffff821115611e4857611e48611cf6565b5060051b60200190565b600082601f830112611e6357600080fd5b81356020611e78611e7383611e2e565b611d35565b82815260059290921b84018101918181019086841115611e9757600080fd5b8286015b84811015611eb25780358352918301918301611e9b565b509695505050505050565b600080600060608486031215611ed257600080fd5b833567ffffffffffffffff80821115611eea57600080fd5b611ef687838801611e52565b9450602086013593506040860135915080821115611f1357600080fd5b50611e2486828701611dbe565b600060208284031215611f3257600080fd5b813567ffffffffffffffff811115611f4957600080fd5b8201601f81018413611f5a57600080fd5b611f6984823560208401611d66565b949350505050565b600060c08284031215611f8357600080fd5b611f8b611d0c565b905081358152602082013560208201526040820135604082015260608201356060820152608082013567ffffffffffffffff80821115611fca57600080fd5b611fd685838601611dbe565b608084015260a0840135915080821115611fef57600080fd5b50611ffc84828501611dbe565b60a08301525092915050565b60006020828403121561201a57600080fd5b813567ffffffffffffffff81111561203157600080fd5b611f6984828501611f71565b60006020828403121561204f57600080fd5b5035919050565b60008060006060848603121561206b57600080fd5b83359250602084013567ffffffffffffffff8082111561208a57600080fd5b61209687838801611f71565b935060408601359150808211156120ac57600080fd5b90850190604082880312156120c057600080fd5b6040516040810181811083821117156120db576120db611cf6565b604052823581526020830135828111156120f457600080fd5b61210089828601611e52565b6020830152508093505050509250925092565b6020808252603d908201527f41637475616c20626174636820737461727420696e64657820646f6573206e6f60408201527f74206d6174636820657870656374656420737461727420696e6465782e000000606082015260800190565b60006020828403121561218257600080fd5b81518015158114611cef57600080fd5b6020808252602f908201527f50726f706f73657220646f6573206e6f74206861766520656e6f75676820636f60408201526e1b1b185d195c985b081c1bdcdd1959608a1b606082015260800190565b6000602082840312156121f357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612223576122236121fa565b500190565b6000815180845260005b8181101561224e57602081850181015186830182015201612232565b81811115612260576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611cef6020830184612228565b6001600160a01b03811681146107dc57600080fd5b6000602082840312156122af57600080fd5b8151611cef81612288565b60208082526015908201527424b73b30b634b2103130ba31b4103432b0b232b91760591b604082015260600190565b600080604083850312156122fc57600080fd5b82519150602083015161230e81612288565b809150509250929050565b828152604060208201526000611f696040830184612228565b604080825283519082018190526000906020906060840190828701845b8281101561236b5781518452928401929084019060010161234f565b50505092019290925292915050565b85815284602082015283604082015260a06060820152600061239f60a0830185612228565b82810360808401526123b18185612228565b98975050505050505050565b600060208083850312156123d057600080fd5b825167ffffffffffffffff8111156123e757600080fd5b8301601f810185136123f857600080fd5b8051612406611e7382611e2e565b81815260059190911b8201830190838101908783111561242557600080fd5b928401925b8284101561244c57835161243d81612288565b8252928401929084019061242a565b979650505050505050565b600081518084526020808501945080840160005b838110156124905781516001600160a01b03168752958201959082019060010161246b565b509495945050505050565b8481528360208201528260408201526080606082015260006124c06080830184612457565b9695505050505050565b828152604060208201526000611f696040830184612457565b6000602082840312156124f557600080fd5b815164ffffffffff1981168114611cef57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415612535576125356121fa565b5060010190565b6001600160a01b038416815260606020820181905260009061256090830185612228565b905063ffffffff83166040830152949350505050565b634e487b7160e01b600052601260045260246000fd5b60008261259b5761259b612576565b500490565b6000826125af576125af612576565b500690565b60008160001904831182151516156125ce576125ce6121fa565b500290565b6000828210156125e5576125e56121fa565b50039056fe436861696e53746f72616765436f6e7461696e65722d5343432d62617463686573a26469706673582212203bfe78adb336ddfa6505f9bfb3939a7304d9a1afcf69d67ae96f462ace977b1f64736f6c63430008090033";

type StateCommitmentChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateCommitmentChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateCommitmentChain__factory extends ContractFactory {
  constructor(...args: StateCommitmentChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _libAddressManager: PromiseOrValue<string>,
    _l1messenger: PromiseOrValue<string>,
    _fraudProofWindow: PromiseOrValue<BigNumberish>,
    _sequencerPublishWindow: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StateCommitmentChain> {
    return super.deploy(
      _libAddressManager,
      _l1messenger,
      _fraudProofWindow,
      _sequencerPublishWindow,
      overrides || {}
    ) as Promise<StateCommitmentChain>;
  }
  override getDeployTransaction(
    _libAddressManager: PromiseOrValue<string>,
    _l1messenger: PromiseOrValue<string>,
    _fraudProofWindow: PromiseOrValue<BigNumberish>,
    _sequencerPublishWindow: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _libAddressManager,
      _l1messenger,
      _fraudProofWindow,
      _sequencerPublishWindow,
      overrides || {}
    );
  }
  override attach(address: string): StateCommitmentChain {
    return super.attach(address) as StateCommitmentChain;
  }
  override connect(signer: Signer): StateCommitmentChain__factory {
    return super.connect(signer) as StateCommitmentChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateCommitmentChainInterface {
    return new utils.Interface(_abi) as StateCommitmentChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateCommitmentChain {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StateCommitmentChain;
  }
}

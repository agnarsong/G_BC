/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_BIT,
  BVM_BITInterface,
} from "../../../../contracts/L2/predeploys/BVM_BIT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimal",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50734200000000000000000000000000000000000010731a4b46696b2bb4794eb3d4c26f1c55f9170fa4c5604051806040016040528060098152602001682134ba102a37b5b2b760b91b8152506040518060400160405280600381526020016210925560ea1b8152506012828281600390805190602001906200009692919062000100565b508051620000ac90600490602084019062000100565b5050600580546001600160a01b039687166001600160a01b0319909116179055506006805460ff909216600160a01b026001600160a81b031990921695909416949094179390931790915550620001e39050565b8280546200010e90620001a6565b90600052602060002090601f0160209004810192826200013257600085556200017d565b82601f106200014d57805160ff19168380011785556200017d565b828001600101855582156200017d579182015b828111156200017d57825182559160200191906001019062000160565b506200018b9291506200018f565b5090565b5b808211156200018b576000815560010162000190565b600181811c90821680620001bb57607f821691505b60208210811415620001dd57634e487b7160e01b600052602260045260246000fd5b50919050565b610bcf80620001f36000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d714610225578063a9059cbb14610238578063ae1f6aaf1461024b578063c01e1bd614610276578063dd62ed3e1461028957600080fd5b806370a08231146101cd57806376809ce3146101f657806395d89b411461020a5780639dc29fac1461021257600080fd5b806323b872dd116100de57806323b872dd14610172578063313ce5671461018557806339509351146101a557806340c10f19146101b857600080fd5b806301ffc9a71461011057806306fdde0314610138578063095ea7b31461014d57806318160ddd14610160575b600080fd5b61012361011e3660046109c3565b6102c2565b60405190151581526020015b60405180910390f35b610140610320565b60405161012f91906109f4565b61012361015b366004610a65565b6103b2565b6002545b60405190815260200161012f565b610123610180366004610a8f565b610433565b600654600160a01b900460ff165b60405160ff909116815260200161012f565b6101236101b3366004610a65565b6104b4565b6101cb6101c6366004610a65565b61053a565b005b6101646101db366004610acb565b6001600160a01b031660009081526020819052604090205490565b60065461019390600160a01b900460ff1681565b6101406105e5565b6101cb610220366004610a65565b6105f4565b610123610233366004610a65565b610693565b610123610246366004610a65565b610719565b60065461025e906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b60055461025e906001600160a01b031681565b610164610297366004610ae6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2631d1d8b6360e01b6001600160e01b031984166301ffc9a760e01b148061031857506001600160e01b0319848116908216145b949350505050565b60606003805461032f90610b19565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90610b19565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152604260248201527f42564d5f4249543a20617070726f76652069732064697361626c65642070656e60448201527f64696e67206675727468657220636f6d6d756e6974792064697363757373696f606482015261371760f11b608482015260009060a4015b60405180910390fd5b60405162461bcd60e51b815260206004820152604760248201527f42564d5f4249543a207472616e7366657246726f6d2069732064697361626c6560448201527f642070656e64696e67206675727468657220636f6d6d756e69747920646973636064820152663ab9b9b4b7b71760c91b608482015260009060a40161042a565b60405162461bcd60e51b815260206004820152604c60248201527f42564d5f4249543a20696e637265617365416c6c6f77616e636520697320646960448201527f7361626c65642070656e64696e67206675727468657220636f6d6d756e69747960648201526b103234b9b1bab9b9b4b7b71760a11b608482015260009060a40161042a565b6006546001600160a01b031633146105945760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e604482015260640161042a565b61059e8282610796565b816001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516105d991815260200190565b60405180910390a25050565b60606004805461032f90610b19565b6006546001600160a01b0316331461064e5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e604482015260640161042a565b6106588282610875565b816001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516105d991815260200190565b60405162461bcd60e51b815260206004820152604c60248201527f42564d5f4249543a206465637265617365416c6c6f77616e636520697320646960448201527f7361626c65642070656e64696e67206675727468657220636f6d6d756e69747960648201526b103234b9b1bab9b9b4b7b71760a11b608482015260009060a40161042a565b60405162461bcd60e51b815260206004820152604360248201527f42564d5f4249543a207472616e736665722069732064697361626c656420706560448201527f6e64696e67206675727468657220636f6d6d756e69747920646973637573736960648201526237b71760e91b608482015260009060a40161042a565b6001600160a01b0382166107ec5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042a565b80600260008282546107fe9190610b6a565b90915550506001600160a01b0382166000908152602081905260408120805483929061082b908490610b6a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166108d55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042a565b6001600160a01b038216600090815260208190526040902054818110156109495760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042a565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610978908490610b82565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000602082840312156109d557600080fd5b81356001600160e01b0319811681146109ed57600080fd5b9392505050565b600060208083528351808285015260005b81811015610a2157858101830151858201604001528201610a05565b81811115610a33576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a6057600080fd5b919050565b60008060408385031215610a7857600080fd5b610a8183610a49565b946020939093013593505050565b600080600060608486031215610aa457600080fd5b610aad84610a49565b9250610abb60208501610a49565b9150604084013590509250925092565b600060208284031215610add57600080fd5b6109ed82610a49565b60008060408385031215610af957600080fd5b610b0283610a49565b9150610b1060208401610a49565b90509250929050565b600181811c90821680610b2d57607f821691505b60208210811415610b4e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b7d57610b7d610b54565b500190565b600082821015610b9457610b94610b54565b50039056fea26469706673582212201959bd6e2d63380ecfd7deaa6b17ccc19c819a81ee3b91e93fcac6625d99493e64736f6c63430008090033";

type BVM_BITConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_BITConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_BIT__factory extends ContractFactory {
  constructor(...args: BVM_BITConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_BIT> {
    return super.deploy(overrides || {}) as Promise<BVM_BIT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BVM_BIT {
    return super.attach(address) as BVM_BIT;
  }
  override connect(signer: Signer): BVM_BIT__factory {
    return super.connect(signer) as BVM_BIT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_BITInterface {
    return new utils.Interface(_abi) as BVM_BITInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_BIT {
    return new Contract(address, _abi, signerOrProvider) as BVM_BIT;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_GasPriceOracle,
  BVM_GasPriceOracleInterface,
} from "../../../../contracts/L2/predeploys/BVM_GasPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ChargeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "CounterIncremented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DAGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DASwitchUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DecimalsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "GasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "IsBurningUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "L1BaseFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OverheadUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ScalarUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "IsBurning",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daSwitch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1Fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1GasUsed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1BaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overhead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scalar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sccAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_charge",
        type: "uint256",
      },
    ],
    name: "setCharge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_daGasPrice",
        type: "uint256",
      },
    ],
    name: "setDAGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_daSwitch",
        type: "uint256",
      },
    ],
    name: "setDaSwitch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
    ],
    name: "setGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_isBurning",
        type: "uint256",
      },
    ],
    name: "setIsBurning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256",
      },
    ],
    name: "setL1BaseFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_overhead",
        type: "uint256",
      },
    ],
    name: "setOverhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256",
      },
    ],
    name: "setScalar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e5c380380610e5c83398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b610cb6806101a66000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370465597116100de578063c764783211610097578063f2fde38b11610071578063f2fde38b146102f5578063f45e65d814610308578063fc55b13814610311578063fe173b971461032457600080fd5b8063c7647832146102bc578063de26c4a1146102cf578063ea01cd36146102e257600080fd5b80637046559714610243578063715018a6146102565780638c8885c81461025e5780638da5cb5b14610271578063bede39b514610296578063bf1fe420146102a957600080fd5b806345c51a381161014b578063551619131161012557806355161913146102205780635b34b966146102295780635cbe497a1461023157806361bc221a1461023a57600080fd5b806345c51a38146101f157806349948e0e14610204578063519b4bd31461021757600080fd5b80630c18c162146101935780630d1e43a0146101af5780630e6faf1e146101b757806328800578146101c0578063313ce567146101d55780633577afc5146101de575b600080fd5b61019c60035481565b6040519081526020015b60405180910390f35b60065461019c565b61019c600a5481565b6101d36101ce366004610972565b61032d565b005b61019c60055481565b6101d36101ec366004610972565b6103c7565b6101d36101ff366004610972565b61042d565b61019c6102123660046109a1565b61048c565b61019c60025481565b61019c60075481565b6101d36104e8565b61019c60095481565b61019c600b5481565b6101d3610251366004610972565b610537565b6101d3610596565b6101d361026c366004610972565b6105cc565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101a6565b6101d36102a4366004610972565b61062b565b6101d36102b7366004610972565b61068a565b6101d36102ca366004610972565b6106e9565b61019c6102dd3660046109a1565b610772565b60085461027e906001600160a01b031681565b6101d3610303366004610a52565b6107fe565b61019c60045481565b6101d361031f366004610972565b610899565b61019c60015481565b6000546001600160a01b031633146103605760405162461bcd60e51b815260040161035790610a82565b60405180910390fd5b8080158061036e5750806001145b61038a5760405162461bcd60e51b815260040161035790610ab7565b600a8290556040518281527f65cacb453bbeab72658947058c43b2a6c7dfcca1c9d96ba1bc470d346929b288906020015b60405180910390a15050565b6000546001600160a01b031633146103f15760405162461bcd60e51b815260040161035790610a82565b60038190556040518181527f32740b35c0ea213650f60d44366b4fb211c9033b50714e4a1d34e65d5beb9bb4906020015b60405180910390a150565b6000546001600160a01b031633146104575760405162461bcd60e51b815260040161035790610a82565b60098190556040518181527f5af81f5214eaf8c64101a8fde536abc770ef62af9e14d15e2b0b68760b2028f590602001610422565b60008061049883610772565b90506000600254826104aa9190610b04565b90506000600554600a6104bd9190610c09565b90506000600454836104cf9190610b04565b905060006104dd8383610c15565b979650505050505050565b600b80549060006104f883610c37565b9091555050600b5460405190815233907f59950fb23669ee30425f6d79758e75fae698a6c88b2982f2980638d8bcd9397d9060200160405180910390a2565b6000546001600160a01b031633146105615760405162461bcd60e51b815260040161035790610a82565b60048190556040518181527f3336cd9708eaf2769a0f0dc0679f30e80f15dcd88d1921b5a16858e8b85c591a90602001610422565b6000546001600160a01b031633146105c05760405162461bcd60e51b815260040161035790610a82565b6105ca6000610922565b565b6000546001600160a01b031633146105f65760405162461bcd60e51b815260040161035790610a82565b60058190556040518181527fd68112a8707e326d08be3656b528c1bcc5bbbfc47f4177e2179b14d8640838c190602001610422565b6000546001600160a01b031633146106555760405162461bcd60e51b815260040161035790610a82565b60028190556040518181527f351fb23757bb5ea0546c85b7996ddd7155f96b939ebaa5ff7bc49c75f27f2c4490602001610422565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161035790610a82565b60018190556040518181527ffcdccc6074c6c42e4bd578aa9870c697dc976a270968452d2b8c8dc369fae39690602001610422565b6000546001600160a01b031633146107135760405162461bcd60e51b815260040161035790610a82565b808015806107215750806001145b61073d5760405162461bcd60e51b815260040161035790610ab7565b60068290556040518281527fd1eaae13a99b475ddca546a1b4a45052c66c14049997f44a1731a8e7167981a7906020016103bb565b600080805b83518110156107d75783818151811061079257610792610c52565b01602001516001600160f81b0319166107b7576107b0600483610c68565b91506107c5565b6107c2601083610c68565b91505b806107cf81610c37565b915050610777565b506000600354826107e89190610c68565b90506107f681610440610c68565b949350505050565b6000546001600160a01b031633146108285760405162461bcd60e51b815260040161035790610a82565b6001600160a01b03811661088d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610357565b61089681610922565b50565b6000546001600160a01b031633146108c35760405162461bcd60e51b815260040161035790610a82565b808015806108d15750806001145b6108ed5760405162461bcd60e51b815260040161035790610ab7565b60078290556040518281527f49244d4195584d0644398167ca8caa7b98ee36b674e4b4d2a2640749b27eafb7906020016103bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561098457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109b357600080fd5b813567ffffffffffffffff808211156109cb57600080fd5b818401915084601f8301126109df57600080fd5b8135818111156109f1576109f161098b565b604051601f8201601f19908116603f01168101908382118183101715610a1957610a1961098b565b81604052828152876020848701011115610a3257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610a6457600080fd5b81356001600160a01b0381168114610a7b57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f696e76616c69642076616c75652c6d7573742062652030206f72203100000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b1e57610b1e610aee565b500290565b600181815b80851115610b5e578160001904821115610b4457610b44610aee565b80851615610b5157918102915b93841c9390800290610b28565b509250929050565b600082610b7557506001610c03565b81610b8257506000610c03565b8160018114610b985760028114610ba257610bbe565b6001915050610c03565b60ff841115610bb357610bb3610aee565b50506001821b610c03565b5060208310610133831016604e8410600b8410161715610be1575081810a610c03565b610beb8383610b23565b8060001904821115610bff57610bff610aee565b0290505b92915050565b6000610a7b8383610b66565b600082610c3257634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415610c4b57610c4b610aee565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610c7b57610c7b610aee565b50019056fea2646970667358221220f9e4105aa8a1c83a75a5388ef7cbdf5a3f161292186b4cdaba4081e4cbcee34764736f6c63430008090033";

type BVM_GasPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_GasPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_GasPriceOracle__factory extends ContractFactory {
  constructor(...args: BVM_GasPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_GasPriceOracle> {
    return super.deploy(_owner, overrides || {}) as Promise<BVM_GasPriceOracle>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): BVM_GasPriceOracle {
    return super.attach(address) as BVM_GasPriceOracle;
  }
  override connect(signer: Signer): BVM_GasPriceOracle__factory {
    return super.connect(signer) as BVM_GasPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_GasPriceOracleInterface {
    return new utils.Interface(_abi) as BVM_GasPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_GasPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as BVM_GasPriceOracle;
  }
}
